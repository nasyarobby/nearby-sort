{"version":3,"file":"sort.cjs","sources":["../src/index.js"],"sourcesContent":["// Distance calculation\nconst getDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // Radius of the earth in km\n  const dLat = deg2rad(lat2 - lat1); // deg2rad below\n  const dLon = deg2rad(lon2 - lon1);\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  const d = R * c; // Distance in km\n  return d;\n};\n\n// Deg conversion\nconst deg2rad = (deg) => {\n  return deg * (Math.PI / 180);\n};\n\n// Validate the arguments\nconst validateArgs = (lat, long, arr, asc) => {\n  if (!lat || !long || !arr) {\n    throw new Error('Invalid arguments');\n  }\n  if (typeof lat !== 'number' || typeof long !== 'number') {\n    throw new Error('lat and long should be numbers');\n  }\n  if (!Array.isArray(arr)) {\n    throw new Error('Second argument should be an array');\n  }\n  // added comment\n  if (typeof asc !== 'boolean') {\n    throw new Error('Asc argument should be a boolean');\n  }\n};\n\n// Sort the array according to the user's lat long\nconst nearbySort = ({ lat, long }, arr, asc = true) => {\n  return new Promise((resolve, reject) => {\n    try {\n      validateArgs(lat, long, arr, asc);\n      const sortedArray = arr.sort((a, b) => {\n        const distanceA = getDistance(lat, long, a.lat, a.long);\n        const distanceB = getDistance(lat, long, b.lat, b.long);\n        return asc ? distanceA - distanceB : distanceB - distanceA;\n      });\n      resolve(sortedArray);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\nexport default nearbySort;\n"],"names":["lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","a","Math","sin","cos","atan2","sqrt","deg","PI","arr","asc","lat","_ref","long","resolve","reject","Error","Array","isArray","validateArgs","sort","b","distanceA","getDistance","distanceB","err"],"mappings":"AACA,MAAoB,SAACA,EAAMC,EAAMC,EAAMC,GACrC,IACMC,EAAOC,EAAQH,EAAOF,GAClBM,EAAGD,EAAQF,EAAOF,GACtBM,EACJC,KAAKC,IAAIL,EAAO,GAAKI,KAAKC,IAAIL,EAAO,GACrCI,KAAKE,IAAIL,EAAQL,IAASQ,KAAKE,IAAIL,EAAQH,IAASM,KAAKC,IAAIH,EAAO,GAAKE,KAAKC,IAAIH,EAAO,GAG3F,OAFU,EAAIE,KAAKG,MAAMH,KAAKI,KAAKL,GAAIC,KAAKI,KAAK,EAAIL,IAN3C,IASZ,EAGaF,EAAG,SAACQ,GACf,OAAUA,GAAIL,KAAKM,GAAK,IAC1B,iBAoBmB,WAAgBC,EAAKC,GAAe,IAA9BC,EAAAC,EAAHD,IAAKE,SACzB,YADyC,IAAHH,IAAAA,GAAM,GACrC,YAAY,SAACI,EAASC,GAC3B,KAnBiB,SAACJ,EAAKE,EAAMJ,EAAKC,GACpC,IAAKC,IAAQE,IAASJ,EACpB,MAAUO,IAAAA,MAAM,qBAElB,GAAmB,oBAA4B,iBAATH,EACpC,MAAM,UAAU,kCAElB,IAAKI,MAAMC,QAAQT,GACjB,MAAM,UAAU,sCAGlB,GAAmB,kBAALC,EACZ,MAAM,UAAU,mCAEpB,CAMMS,CAAaR,EAAKE,EAAMJ,EAAKC,GAM7BI,EALoBL,EAAIW,KAAK,SAACnB,EAAGoB,GAC/B,IAAeC,EAAGC,EAAYZ,EAAKE,EAAMZ,EAAEU,IAAKV,EAAC,QAC/BsB,EAAYZ,EAAKE,EAAMQ,EAAEV,IAAKU,EAAC,MACjD,SAAaC,EAAYE,EAAYA,EAAYF,CACnD,GAIF,CAFE,MAAOG,GACPV,EAAOU,EACT,CACF,EACF"}